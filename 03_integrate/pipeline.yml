# ============================================================
# Integration workflow Panpipes (pipeline_integration.py)
# ============================================================
# This file contains the parameters for the integration workflow.
# For full descriptions of the parameters, see the documentation at https://panpipes-pipelines.readthedocs.io/en/latest/yaml_docs/pipeline_integration_yml.html


#--------------------------
# Compute resources options
#--------------------------
resources:
  threads_high: 10
  threads_medium: 5
  threads_low: 1

  threads_gpu: 2

condaenv:

queues:
  long:
  gpu:

# --------------------------------
# Loading and merging data options
# --------------------------------

# ----------------------------
# Data input
# ----------------------------
sample_prefix: gex_teamWood_multiome
preprocessed_obj: ../02-preprocess/gex_teamWood_multiome.h5mu


#-----------------
# Batch correction
# ----------------
# Batch correction, unimodal correction: meaning each modality is batch corrected independently.

# ------------
# RNA modality
rna:
  run: True
  tools: harmony
  column: sample_id 

  # Harmony arguments
  harmony:
    sigma: 0.1
    theta: 1.0
    npcs: 100

  # BBKNN args # https://bbknn.readthedocs.io/en/latest/
  bbknn:
    neighbors_within_batch: 

  # SCVI args
  scvi:
    seed: 
    exclude_mt_genes: 
    mt_column: 
    model_args:
        n_layers: 
        n_latent:
        gene_likelihood: 
    training_args:
        max_epochs: 
        train_size: 
        early_stopping: 
    training_plan: 
        lr: 
        n_epochs_kl_warmup: 
        reduce_lr_on_plateau: 
        lr_scheduler_metric: 
        lr_patience: 
        lr_factor:

  # Find neighbour parameters
  neighbors: &rna_neighbours
    npcs: 100
    k: 45
    metric: euclidean
    method: scanpy

# ----------------
# Protein modality
prot:
  run: False
  tools:
  column: 

  # Harmony args
  harmony:
    sigma: 
    theta: 
    npcs: 

  # BBKNN args # https://bbknn.readthedocs.io/en/latest/
  bbknn:
    neighbors_within_batch: 

  # Find neighbour parameters
  neighbors:
    npcs: 
    k: 
    metric:
    method:

# -------------
# ATAC modality
atac:
  run: False
  dimred: 
  tools:
  column:  

  # Harmony args
  harmony:
    sigma: 
    theta: 
    npcs: 

  # BBKNN args # https://bbknn.readthedocs.io/en/latest/
  bbknn:
    neighbors_within_batch: 

  # Find neighbour parameters
  neighbors: 
    npcs: 
    k: 
    metric:
    method:


#-----------------------
# multimodal integration
# ----------------------
# remember to specify knn graph params in the section "neighbors"
multimodal:
  run: False
  tools: None
  column_categorical:

  # TotalVI arguments
  totalvi:
    seed: 
    modalities: 
    exclude_mt_genes: 
    mt_column: 
    filter_by_hvg:
    filter_prot_outliers: 
    model_args: 
      latent_distribution: 
    training_args:
      max_epochs: 
      train_size: 
      early_stopping:
    training_plan: 

  # MultiVI arguments
  MultiVI:
    seed: 
    lowmem: 
    model_args:
      n_hidden :
      n_latent :
      region_factors : 
      latent_distribution :
      deeply_inject_covariates : 
      fully_paired :

    training_args:
      max_epochs :
      lr :
      use_gpu :
      train_size :
      validation_size :
      batch_size : 
      weight_decay :
      eps : 
      early_stopping :
      save_best : 
      check_val_every_n_epoch :
      n_steps_kl_warmup :
      n_epochs_kl_warmup : 
      adversarial_mixing : 
    training_plan :

  # Mofa arguments
  mofa:
    modalities: 
    filter_by_hvg: 
    n_factors: 
    n_iterations: 
    convergence_mode: 
    save_parameters: 
    outfile: 

  # WNN arguments
  WNN:
    modalities: 
    batch_corrected:
      rna: 
      prot: 
      atac: 

    # please use anchors (&) and scalars (*) if necessary
    knn:
      rna: 
      prot:
      atac: 

    # WNN neighbour search
    n_neighbors:
    n_bandwidth_neighbors: 
    n_multineighbors: 
    metric: 
    low_memory: 

  # KNN calculation for multimodal analysis
  neighbors:
    npcs: 
    k: 
    metric: 
    method:


#--------------------
# Plotting parameters
#--------------------
plotqc:
  grouping_var: 

  all: 
  rna: sample_id 
  prot: 
  atac:
  multimodal: 


#-------------
# scib metrics
#-------------
#Obs columns containing the cell type labels
scib:
  rna:
  prot:
  atac:


# -------------------------
# Creating the final object
# -------------------------

#To make the final object please run: panpipes integration make merge_integration
final_obj:
  rna:
    include: True
    bc_choice: harmony
  prot:
    include: False
    bc_choice: 
  atac:
    include: False
    bc_choice: 
  multimodal:
    include: False
    bc_choice:
